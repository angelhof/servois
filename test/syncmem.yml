# Synchronized memory data structure's abstract definition
#   Every memory cell also has a corresponding lock

name: syncmem

preamble: |
  (declare-sort E 0)
  (declare-sort F 0)

state:
  - name: varnames
    type: (Set E)
  - name: threadids
    type: (Set F)
  - name: contents
    type: (Array E Int)
  - name: var2locks
    type: (Array E F)

states_equal:
  definition: |
    (and (= varnames_1 varnames_2)
         (= contents_1 contents_2)
         (= threadids_1 threadids_2)
         (= var2locks_1 var2locks_2))

methods:
  - name: tryread
    args:
      - name: tid0
        type: F
      - name: x0
        type: E
    return:
      - name: result
        type: Int
    requires: |
      true
    ensures: |
      (and (= contents_new contents)
           (= varnames_new varnames)
           (= threadids_new threadids)
           (= var2locks_new var2locks)
           (ite (= tid0 (select var2locks x0))
                (= result (select contents x0))
                (= result (- 0 1))))
    terms:
      Int: [(select contents $2)]
      E: [$2]
      F: [$1, (select var2locks $2)]
      (Set E): [varnames, (singleton $2), (setminus varnames (singleton $2))]
      (Set F): [threadids, (singleton $1), (setminus threadids (singleton $1))]
      (Array E Int): [contents]
      (Array F Int): [var2locks]
  - name: trywrite
    args:
      - name: tid0
        type: F
      - name: x0
        type: E
      - name: v
        type: Int
    return:
      - name: result
        type: Bool
    requires: |
      true
    ensures: |
      (ite (and (member tid0 threadids) (= tid0 (select var2locks x0)))
           (ite (member x0 varnames)
                (and result
                     (= var2locks_new var2locks)
                     (= threadids_new threadids)
                     (= varnames_new varnames)
                     (ite (= v (select contents x0))
                          (= contents_new contents)
                          (= contents_new (store contents x0 v))))
                (and result
                     (= var2locks_new var2locks)
                     (= threadids_new threadids)
                     (= varnames_new (insert x0 varnames))
                     (= contents_new (store contents x0 v))))
           (and (= result false)
                (= varnames_new varnames)
                (= contents_new contents)
                (= var2locks_new var2locks)
                (= threadids_new threadids)))

    terms:
      Int: [$3, (select contents $2)]
      E: [$2]
      F: [$1, (select var2locks $2)]
      (Set E): [varnames, (singleton $2), (setminus varnames (singleton $2))]
      (Set F): [threadids, (singleton $1), (setminus threadids (singleton $1))]
      (Array E Int): [contents]
      (Array E F): [var2locks]
#      Int: [contents]

predicates:
  - name: "="
    type: [Int, Int]
  - name: "="
    type: [E, E]
  - name: "="
    type: [(Set E), (Set E)]
  - name: "="
    type: [(Set F), (Set F)]
  - name: "="
    type: [(Array E Int), (Array E Int)]
  - name: "="
    type: [(Array E F), (Array E F)]
  - name: "member"
    type: [E, (Set E)]
  - name: "member"
    type: [F, (Set F)]
